type Query {
    getTopicRecommendations(slug: String!, algorithmicCount: Int = 30, curatedCount: Int = 30): TopicRecommendations
    listTopics: [Topic!]!
}

enum PageType {
    editorial_collection
    topic_page
}

type Topic {
    id: ID!
    displayName: String!
    displayNote: String
    slug: String!
    query: [String!]!
    curatorLabel: String!
    isDisplayed: Boolean!
    isPromoted: Boolean!
    socialTitle: String
    socialDescription: String
    socialImage: String
    pageType: PageType!
    customFeedId: ID
}

type TopicRecommendations {
    curatedRecommendations: [Recommendation!]!
    algorithmicRecommendations: [Recommendation!]!
}

type Recommendation {
    feedItemId: ID!
    itemId: ID!
    feedId: Int
}
